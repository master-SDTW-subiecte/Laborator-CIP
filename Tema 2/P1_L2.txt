#include<iostream>
#include<mpi.h>
using namespace std;


struct _point {
	int x, y, z;
};


int main(int argc, char ** argv)
{
	int rank, size;

	MPI_Datatype simpleStruct;
	MPI_Status stat;
	struct _point test;

	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);

	MPI_Type_contiguous(3, MPI_INT, &simpleStruct);
	MPI_Type_commit(&simpleStruct);

	if (0 == rank) {
		test.x = 10;
		test.y = 12;
		test.z = 14;
		MPI_Send(&test, 1, simpleStruct, 1, 99, MPI_COMM_WORLD);
	}
	else {
		if (1 == rank) {
			MPI_Recv(&test, 1, simpleStruct, 0, 99, MPI_COMM_WORLD, &stat);
			printf("%d %d %d\n", test.x, test.y, test.z);
		}
	}
	MPI_Type_free(&simpleStruct);
	MPI_Finalize();
	return 0;
}